[{"/home/innocent/Desktop/React-101/expensify/src/index.js":"1","/home/innocent/Desktop/React-101/expensify/src/routers/AppRouter.js":"2","/home/innocent/Desktop/React-101/expensify/src/reducers/filters.js":"3","/home/innocent/Desktop/React-101/expensify/src/reducers/expenses.js":"4","/home/innocent/Desktop/React-101/expensify/src/components/Header.js":"5","/home/innocent/Desktop/React-101/expensify/src/actions/expense.js":"6","/home/innocent/Desktop/React-101/expensify/src/stores/configureStore.js":"7","/home/innocent/Desktop/React-101/expensify/src/components/Help.js":"8","/home/innocent/Desktop/React-101/expensify/src/reportWebVitals.js":"9","/home/innocent/Desktop/React-101/expensify/src/components/NotFound.js":"10","/home/innocent/Desktop/React-101/expensify/src/selectors/expenses.js":"11","/home/innocent/Desktop/React-101/expensify/src/actions/filters.js":"12","/home/innocent/Desktop/React-101/expensify/src/components/ExpenseDashboard.js":"13","/home/innocent/Desktop/React-101/expensify/src/components/ExpenseList.js":"14","/home/innocent/Desktop/React-101/expensify/src/components/ExpenseListItem.js":"15","/home/innocent/Desktop/React-101/expensify/src/components/ExpenseListFilters.js":"16","/home/innocent/Desktop/React-101/expensify/src/components/AddExpensePage.js":"17","/home/innocent/Desktop/React-101/expensify/src/components/ExpenseForm.js":"18","/home/innocent/Desktop/React-101/expensify/src/components/EditExpense.js":"19","/home/innocent/Desktop/React-101/expensify/src/components/EditExpensePage.js":"20"},{"size":1397,"mtime":1617029079208,"results":"21","hashOfConfig":"22"},{"size":901,"mtime":1616751613601,"results":"23","hashOfConfig":"22"},{"size":1056,"mtime":1617030564453,"results":"24","hashOfConfig":"22"},{"size":807,"mtime":1616749331968,"results":"25","hashOfConfig":"22"},{"size":559,"mtime":1616744923275,"results":"26","hashOfConfig":"22"},{"size":551,"mtime":1613212695707,"results":"27","hashOfConfig":"22"},{"size":501,"mtime":1616756208049,"results":"28","hashOfConfig":"22"},{"size":166,"mtime":1610511664802,"results":"29","hashOfConfig":"22"},{"size":362,"mtime":1610510729952,"results":"30","hashOfConfig":"22"},{"size":228,"mtime":1616744785946,"results":"31","hashOfConfig":"22"},{"size":885,"mtime":1616758472879,"results":"32","hashOfConfig":"22"},{"size":480,"mtime":1616766373890,"results":"33","hashOfConfig":"22"},{"size":295,"mtime":1616024083789,"results":"34","hashOfConfig":"22"},{"size":584,"mtime":1616023440186,"results":"35","hashOfConfig":"22"},{"size":323,"mtime":1616752599281,"results":"36","hashOfConfig":"22"},{"size":2836,"mtime":1616766224656,"results":"37","hashOfConfig":"22"},{"size":545,"mtime":1616749275859,"results":"38","hashOfConfig":"22"},{"size":3403,"mtime":1617028919569,"results":"39","hashOfConfig":"22"},{"size":582,"mtime":1616751506939,"results":"40","hashOfConfig":"22"},{"size":912,"mtime":1617029182677,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"nefk0a",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/innocent/Desktop/React-101/expensify/src/index.js",["90","91"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter from './routers/AppRouter';\nimport configureStore from './stores/configureStore';\nimport  { addExpense } from './actions/expense';\nimport getVisibleExpenses from './selectors/expenses';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = configureStore();\n\n// store.dispatch(addExpense({ description: 'Water bill', amount : 4500 }));\n// store.dispatch(addExpense({ description: 'Gas bill', createdAt: 1000 }));\n// store.dispatch(addExpense({ description: 'Rent', amount : 109500 }));\n\n// store.dispatch(setTextFilter('bill'));\n//  This was usefull when we havent set text fillter for ourself now it just hold us back\n// setTimeout(()=> {\n//     store.dispatch(setTextFilter('water'));\n// },3000)\n\nconst state = store.getState();\nconst visibleExpenses = getVisibleExpenses(state.expenses, state.filters); \n// console.log(visibleExpenses);\n// console.log(store.getState());\n\nconsole.log('test')\nconst jsx = (\n    <Provider store = {store} >\n      <AppRouter />\n    </Provider>\n)\n\nReactDOM.render( jsx, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["92","93"],"/home/innocent/Desktop/React-101/expensify/src/routers/AppRouter.js",[],"/home/innocent/Desktop/React-101/expensify/src/reducers/filters.js",[],"/home/innocent/Desktop/React-101/expensify/src/reducers/expenses.js",[],"/home/innocent/Desktop/React-101/expensify/src/components/Header.js",[],["94","95"],"/home/innocent/Desktop/React-101/expensify/src/actions/expense.js",[],"/home/innocent/Desktop/React-101/expensify/src/stores/configureStore.js",[],["96","97"],"/home/innocent/Desktop/React-101/expensify/src/components/Help.js",[],"/home/innocent/Desktop/React-101/expensify/src/reportWebVitals.js",[],["98","99"],"/home/innocent/Desktop/React-101/expensify/src/components/NotFound.js",[],"/home/innocent/Desktop/React-101/expensify/src/selectors/expenses.js",["100"]," import moment from 'moment';\n\n// Get visible expenses\n const getVisibleExpenses = ( expenses, {text, sortBy, startDate, endDate } = {}) => {\n\n    return expenses.filter((expense) => {\n        const createdAtmoment = moment(expense.createdAt)\n        const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtmoment, 'day') : true;\n        const endDateMatch = startDate ? startDate.isSameOrAfter(createdAtmoment, 'day') : true;;\n        const textMatch = expense.description.toString().toLowerCase().includes(text.toString().toLowerCase());\n        \n        return startDateMatch && endDateMatch && textMatch;\n    }).sort((a, b) => {\n        if(sortBy === 'date'){\n            return a.createdAt < b.createdAt ? 1:-1;\n        }else if(sortBy === 'amount'){\n            return a.amount < b.amount ? 1:-1;\n        }\n        \n     })\n}; \n\nexport default getVisibleExpenses;\n\n\n","/home/innocent/Desktop/React-101/expensify/src/actions/filters.js",[],"/home/innocent/Desktop/React-101/expensify/src/components/ExpenseDashboard.js",[],"/home/innocent/Desktop/React-101/expensify/src/components/ExpenseList.js",[],"/home/innocent/Desktop/React-101/expensify/src/components/ExpenseListItem.js",[],"/home/innocent/Desktop/React-101/expensify/src/components/ExpenseListFilters.js",["101"],"import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { DateRangePicker } from 'react-dates';\nimport { setTextFilter, sortByAmount ,sortByDate, setStartDate, setEndDate }  from '../actions/filters';\n\n\nclass ExpenseListFilters extends React.Component {\n    state = {\n         calendarFocused: null,\n        //  startDate: moment().startOf('month'),\n        //  endDate: moment().endOf('month')\n\n        };\n\n        onDatesChange = ({ startDate, endDate })=>{\n            this.props.dispatch(setStartDate(startDate))\n            this.props.dispatch(setEndDate(endDate))\n        }\n\n        onFocusChange = (calendarFocused)=>{\n                this.setState(()=> ({ calendarFocused }));\n        }\n    \n    render(){\n        return(\n                <div>\n                   <input type = 'text' \n                          value= {this.props.filters.text} \n                          onChange = {(e)=> {\n                                this.props.dispatch(setTextFilter(e.target.value))\n                          } }\n                    />\n                    <select \n                        value = {this.props.filters.sortBy}\n                        onChange = {(e)=>{\n                            if(e.target.valuey === \"date\"){\n                                this.props.dispatch(sortByDate())\n                            }else if(e.target.value === \"amount\"){\n                                this.props.dispatch(sortByAmount())\n                            }\n                        }}\n                    >\n                        <option value = \"date\">Date</option>\n                        <option value = \"amount\">Amount</option>\n                    </select>\n\n                    <DateRangePicker\n\n                        startDate={this.props.filters.startDate} // momentPropTypes.momentObj or null,\n                        endDate={this.props.filters.endDate} // momentPropTypes.momentObj or null,\n                        onDatesChange={ this.onDatesChange }         // {({ startDate, endDate }) => this.setState({ startDate, endDate })} // PropTypes.func.isRequired,\n                        focusedInput={this.state.calendarFocused} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n                        onFocusChange={this.onFocusChange}  // {calendarFocused => this.setState({ calendarFocused })} // PropTypes.func.isRequired,\n                        showClearDates={true}\n                        numberOfMonths= {1}\n                        isOutsideRange = {() => false }\n\n                    />\n\n                </div>\n            )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n      return{\n          filters: state.filters\n      };\n};\n\nexport default connect(mapStateToProps)(ExpenseListFilters);\n\n// the goal from here is to actual get the old value off from the store ","/home/innocent/Desktop/React-101/expensify/src/components/AddExpensePage.js",[],"/home/innocent/Desktop/React-101/expensify/src/components/ExpenseForm.js",["102"],"import React from 'react';\nimport moment from 'moment';\nimport { SingleDatePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\n\nconst now = moment();\n\n// console.log(now.format('MMM Do, YYYY'))\nexport default class ExpenseForm extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            description:props.expense ? props.expense.description : '',\n            note:props.expense ? props.expense.note : '',\n            amount:props.expense ? (props.expense.amount / 100).toString() : '',\n            createdAt:props.expense ? moment(props.expense.createdAt) : moment(),\n            calendarFocused: false,\n            error: ''\n           \n        };\n    }\n\n    onDescriptionChange = (e) => {\n        const description = e.target.value\n        this.setState(()=>({\n            description\n        }))\n    }\n\n    onNoteChange =(e) => {\n        const note = e.target.value\n        this.setState(()=> ({note}))\n    }\n\n    onAmountChange = (e) => {\n        const amount = e.target.value\n        if(!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)){\n            this.setState(()=>({amount}))\n        }\n    }\n\n    onDateChange = (createdAt) =>{\n        if (createdAt){\n        this.setState(()=>({createdAt}))\n        }\n    }\n\n    onFocusChange = ({ focused }) => {\n        this.setState(()=>({calendarFocused: focused}))\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        if(!this.state.description || !this.state.amount){\n            this.setState(()=>({\n                error: 'please provide description and amount'\n            }))\n        }else{\n            this.setState(()=>({error: ''}))\n            this.props.onSubmit({\n                description:this.state.description,\n                amount:parseFloat(this.state.amount, 10) * 100,\n                createdAt: this.state.createdAt.valueOf(),\n                note:this.state.note\n            })\n        }\n    }\n\n\n    render(){\n        return (\n            <div>\n            {this.state.error && <p>{this.state.error}</p>}\n            <form onSubmit = {this.onSubmit}>\n              <input type = \"text\"\n                    placeholder=\"descripition\"\n                    autoFocus\n                    value = {this.state.description} \n                    onChange = {this.onDescriptionChange}\n               />\n\n               <input type=\"number\"\n                      placeholder=\"amount\"\n                      value = {this.state.amount}\n                      onChange ={this.onAmountChange}\n\n                />\n\n                <SingleDatePicker\n                        date={this.state.createdAt} // momentPropTypes.momentObj or null\n                        onDateChange={this.onDateChange} // PropTypes.func.isRequired\n                        focused={this.state.calendarFocused} // PropTypes.bool\n                        onFocusChange={this.onFocusChange} // PropTypes.func.isRequired\n                        numberOfMonths= {1}\n                        isOutsideRange = {() => false }\n                />\n\n                <textarea\n                  placeholder = \"Add a note for your expense (optional)\"\n                  value= {this.state.note}\n                  onChange= {this.onNoteChange}\n                >\n                </textarea>\n                <button> Add Expense</button>\n            \n            </form>\n            </div>\n        )\n    }\n}","/home/innocent/Desktop/React-101/expensify/src/components/EditExpense.js",[],"/home/innocent/Desktop/React-101/expensify/src/components/EditExpensePage.js",[],{"ruleId":"103","severity":1,"message":"104","line":6,"column":11,"nodeType":"105","messageId":"106","endLine":6,"endColumn":21},{"ruleId":"103","severity":1,"message":"107","line":23,"column":7,"nodeType":"105","messageId":"106","endLine":23,"endColumn":22},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"110","replacedBy":"113"},{"ruleId":"108","replacedBy":"114"},{"ruleId":"110","replacedBy":"115"},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":13,"column":20,"nodeType":"120","messageId":"121","endLine":13,"endColumn":22},{"ruleId":"103","severity":1,"message":"122","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"123","line":6,"column":7,"nodeType":"105","messageId":"106","endLine":6,"endColumn":10},"no-unused-vars","'addExpense' is defined but never used.","Identifier","unusedVar","'visibleExpenses' is assigned a value but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],["124"],["125"],["124"],["125"],["124"],["125"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'moment' is defined but never used.","'now' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]